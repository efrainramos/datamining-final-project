#install.packages("devtools")
#library(devtools)
#devtools::install_github("")
#install.packages('genius')
library(spotifyr)
library(genius)
#install.packages("devtools")
#library(devtools)
#devtools::install_github("")
#install.packages('genius')
library(spotifyr)
library(genius)
# Authorize Spotify API info
Sys.setenv(SPOTIFY_CLIENT_ID = '3d49f13ca5124a8280e741a3f3842ff7')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '6aaabaa303b548ee97f1b286a68933c9')
access_token <- get_spotify_access_token()
# Get featured playlists on spotify
featuredPlaylists <- get_featured_playlists()
View(featuredPlaylists)
# Get playlist categories
cats <- get_categories()
hiphop <- get_category_playlists("hiphop")
View(cats)
# Get playlist categories
cats <- get_categories()
# Extract RapCaviar playlist track names and clean data
RapCaviar <- get_playlist("37i9dQZF1DX0XUsuxWHRQd")
RapCaviarTracksList <- RapCaviar[["tracks"]]
RapCaviarTracksListItems <- RapCaviarTracksList[["items"]]
# Add track name and song popularity to variables
trackNames <- RapCaviarTracksListItems$track.name
trackPopularity <- RapCaviarTracksListItems$track.popularity
# Song data to extract artist name
artistsSubdata <- RapCaviarTracksListItems$track.album.artists
artistsSubdata[[1]]$name
# Make df with track names
df <- data.frame(trackNames)
# Loop to extract artists names from each list at every level
for (i in 1:100){
x <- artistsSubdata[[i]]$name
df[i,c(2,3,4,5,6,7)] <- c(x)
}
# Remove the repeating values and other artists
df <- df[,-3:-7]
# Add track popularity to df
df$trackPopularity <- trackPopularity
# Using genius_lyrics to obtain song lyrics
lyrics <- genius_lyrics(df, df$V2, df$trackNames, type = "lyric")
# Testing genius package functions
testDF <- df
test <- genius_lyrics(artist = "ddg & og parker", song = "money long")
test_lyricCombo <- test$lyric[1:42,]
testDF$lyrics[2,] <- test_lyricCombo
#function that creates a playlist to a data frame with name, artist, score, and lyrics
playlist_to_df <- function(playlist){
#creates df of Track Names and Pop Score
outputDF <- data.frame(playlist[["tracks"]][["items"]][["track.name"]],playlist[["tracks"]][["items"]][["track.popularity"]])
colnames(outputDF)<-c("name","popularity")
outputDF$name <-gsub("\\s*\\([^\\)]+\\)","",as.character(outputDF$name))
#removes all parenthesis and everything inside them
#artist name added to df
vector1 <- character(nrow(outputDF))
for(i in 1:nrow(outputDF)){
vector1[i]<- playlist[["tracks"]][["items"]][["track.artists"]][[i]][["name"]][[1]]
}
outputDF$artist <- vector1
#lyric time
outputDF$lyrics <-NA
#error handling to keep on adding to df if lyrics cannot be found
for(i in 1:nrow(outputDF)){
try({
lyrics_from_genius <- genius_lyrics(artist = outputDF$artist[i],song = outputDF$name[i], info = "simple")
lyric_list <- lyrics_from_genius$lyric
outputDF$lyrics[i] <- paste(unlist(lyric_list),collapse=' ')
})
}
return(outputDF)
}
#testing my function
#run lines 6-23, then function block, then you can run this test
#test took a while (1 min) to run on my computer. There will be error messages, so just wait til it completes
rc_df <- playlist_to_df(RapCaviar)
View(rc_df)
View(hiphop)
SignedXOXO <- get_playlist("37i9dQZF1DX2A29LI7xHn1")
SignedXOXO <- get_playlist("37i9dQZF1DX2A29LI7xHn1")
SignedXOXO <- get_playlist("37i9dQZF1DX2A29LI7xHn1")
--------------------------------
# Get playlists for pop category
pop <- get_category_playlists("pop")
access_token <- get_spotify_access_token()
# Authorize Spotify API info
Sys.setenv(SPOTIFY_CLIENT_ID = '3d49f13ca5124a8280e741a3f3842ff7')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '6aaabaa303b548ee97f1b286a68933c9')
access_token <- get_spotify_access_token()
access_token <- get_spotify_access_token()
--------------------------------
# Get playlist categories
cats <- get_categories()
